"use strict";var B=Object.create;var s=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var G=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var _=(a,e)=>{for(var t in e)s(a,t,{get:e[t],enumerable:!0})},R=(a,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of v(e))!E.call(a,i)&&i!==t&&s(a,i,{get:()=>e[i],enumerable:!(r=F(e,i))||r.enumerable});return a};var D=(a,e,t)=>(t=a!=null?B(G(a)):{},R(e||!a||!a.__esModule?s(t,"default",{value:a,enumerable:!0}):t,a)),O=a=>R(s({},"__esModule",{value:!0}),a);var U={};_(U,{IoTexService:()=>M,IotexNetworkType:()=>T,newIotexService:()=>b});module.exports=O(U);var P=D(require("iotex-antenna")),c=require("@iotexproject/iotex-address-ts"),T=(t=>(t.Mainnet="mainnet",t.Testnet="testnet",t))(T||{});class M{constructor(e){this.network="mainnet",this.endpoint=this.network==="mainnet"?"https://api.iotex.one:443":"https://api.testnet.iotex.one:443",this.client=new P.default(this.endpoint)}async getChainMetadata(){return await this.client.iotx.getChainMeta({})}async getActionByHash(e){return await this.client.iotx.getActions({byHash:{actionHash:e,checkPending:!0}})}async getBlockMetasByIndex(e,t){if(e<0||t<0)throw new Error("start and count must be greater than 0");return e===0&&(e=1),t===0&&(t=100),await this.client.iotx.getBlockMetas({byIndex:{start:t,count:t}})}async getAccountActions(e){const t=await this.client.iotx.getAccount({address:e});return t.accountMeta==null?[]:await this.client.iotx.getActions({byAddr:{address:t.accountMeta.address,start:1,count:10}})}async getServerMeta(){const e=await this.client.iotx.getServerMeta({});console.log(e)}async getBlocksByIndex(e,t){}async getAllGovernanceActions(e,t){const r=await this.getActionsByIndex(e,t);if(r.length===0)throw new Error("Failed to get actions");const i=r.filter(n=>{var o;return((o=n.action.core)==null?void 0:o.grantReward)!=null}).map(n=>{var o;return(o=n.action.core)==null?void 0:o.grantReward});if(i.length===0||i===void 0)throw new Error("Failed to get grantReward");return console.log(JSON.stringify(i[0],null,2)),{}}async getCreateStakeActionsByIndex(e,t){const r=await this.getActionsByIndex(e,t);if(r.length===0)throw new Error("Failed to get actions");return r.filter(n=>{var o;return((o=n.action.core)==null?void 0:o.stakeCreate)!=null}).map(n=>{var o,d,u,g,k,l,m,w,p,f,h,x,y,S,I,C,A;if(((d=(o=n.action.core)==null?void 0:o.stakeCreate)==null?void 0:d.payload)!=null&&(n.action.core.stakeCreate.payload=n.action.core.stakeCreate.payload.toString()),((u=n.action.core)==null?void 0:u.execution)!=null&&(n.action.core.execution.data=Buffer.from(n.action.core.execution.data.slice(2)).toString("hex")),n.action.senderPubKey=Buffer.from(n.action.senderPubKey).toString("hex"),n.action.signature=Buffer.from(n.action.signature).toString("hex"),((k=(g=n.action.core)==null?void 0:g.stakeCreate)==null?void 0:k.stakedAmount)===void 0||((m=(l=n.action.core)==null?void 0:l.stakeCreate)==null?void 0:m.stakedDuration)===void 0||((p=(w=n.action.core)==null?void 0:w.stakeCreate)==null?void 0:p.autoStake)===void 0)throw new Error("Failed to get actions");return{type:"create_stake",datestring:new Date(n.timestamp.seconds*1e3).toISOString().split("T")[0],address:n.action.senderPubKey,staked_candidate:(h=(f=n.action.core)==null?void 0:f.stakeCreate)==null?void 0:h.candidateName,staked_amount:parseInt((y=(x=n.action.core)==null?void 0:x.stakeCreate)==null?void 0:y.stakedAmount),staked_duration:(I=(S=n.action.core)==null?void 0:S.stakeCreate)==null?void 0:I.stakedDuration,auto_stake:(A=(C=n.action.core)==null?void 0:C.stakeCreate)==null?void 0:A.autoStake}})}async getActionsByIndex(e,t){if(e<0||t<0)throw new Error("start and count must be greater than 0");t===0&&(t=100),e===0&&(e=1);const r=await this.client.iotx.getActions({byIndex:{start:e,count:t}});if(r.actionInfo==null)throw new Error("Failed to get actions");return r.actionInfo}async getGasPrice(){const{gasPrice:e}=await this.client.iotx.suggestGasPrice({});return e}convertEthToIotx(e){return(0,c.from)(e).string()}convertIotxToEth(e){return(0,c.from)(e).stringEth()}}async function b(a){return new M({network:"mainnet"})}0&&(module.exports={IoTexService,IotexNetworkType,newIotexService});
